"""Unit tests for Agent Asteroid: CVE-2024-10905"""

import requests_mock as req_mock

from agent import definitions
from agent.exploits import cve_2024_10905


def testCVE202410905_whenVulnerable_reportFinding(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """CVE-2024-10905 unit test: case when target is vulnerable."""
    requests_mock.get(
        "http://localhost:80/identityiq/login.jsf?prompt=true",
        text="""
               <title>SailPoint IdentityIQ</title>
               <!-- Client locale: en_US -->
               <!-- Build: 8.3p4 e243e6f4783-20240325-035201 -->""",
        status_code=200,
    )
    exploit_instance = cve_2024_10905.CVE202410905Exploit()
    target = definitions.Target("http", "localhost", 80)

    accept = exploit_instance.accept(target)
    vulnerabilities = exploit_instance.check(target)

    assert accept is True
    vulnerability = vulnerabilities[0]
    assert vulnerability.entry.title == "SailPoint IdentityIQ Static File Exposure"
    assert vulnerability.technical_detail == (
        "http://localhost:80 is vulnerable to CVE-2024-10905, "
        "SailPoint IdentityIQ Static File Exposure"
    )


def testCVE202410905_whenSafe_reportNothing(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """CVE-2024-10905 unit test: case when target is safe."""
    requests_mock.get(
        "http://localhost:80/identityiq/login.jsf?prompt=true",
        text="""
               <title>SailPoint IdentityIQ</title>
               <!-- Client locale: en_US -->
               <!-- Build: 8.4p3 e243e6f4783-20240325-035201 -->""",
        status_code=200,
    )
    exploit_instance = cve_2024_10905.CVE202410905Exploit()
    target = definitions.Target("http", "localhost", 80)

    accept = exploit_instance.accept(target)
    vulnerabilities = exploit_instance.check(target)

    assert accept is True
    assert len(vulnerabilities) == 0


def testCVE202410905_whenBelow82_reportFinding(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """CVE-2024-10905 unit test: case when target version is below 8.2."""
    requests_mock.get(
        "http://localhost:80/identityiq/login.jsf?prompt=true",
        text="""
               <title>SailPoint IdentityIQ</title>
               <!-- Client locale: en_US -->
               <!-- Build: 8.1p5 e243e6f4783-20240325-035201 -->""",
        status_code=200,
    )
    exploit_instance = cve_2024_10905.CVE202410905Exploit()
    target = definitions.Target("http", "localhost", 80)

    accept = exploit_instance.accept(target)
    vulnerabilities = exploit_instance.check(target)

    assert accept is True
    vulnerability = vulnerabilities[0]
    assert vulnerability.entry.title == "SailPoint IdentityIQ Static File Exposure"
    assert vulnerability.technical_detail == (
        "http://localhost:80 is vulnerable to CVE-2024-10905, "
        "SailPoint IdentityIQ Static File Exposure"
    )
