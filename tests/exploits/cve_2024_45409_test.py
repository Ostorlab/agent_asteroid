"""Unit tests for Agent Asteroid: CVE-2024-45409"""

import requests_mock as req_mock


from agent import definitions
from agent.exploits import cve_2024_45409


def testCVE202445409_whenVulnerable_reportFinding(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """Test exploit report finding when version is vulnerable."""
    target = definitions.Target("https", "localhost", 8080)
    requests_mock.get(
        target.url + "users/sign_in",
        status_code=200,
        text="<title>Sign in · GitLab</title>"
        '<link rel="preload" href="'
        '/assets/application-b52d3dd3b307bb936ad862671cae67163327a698f3dc2c4f232173d621af2a87.css"'
        ' as="style" type="text/css">',
    )

    exploit_instance = cve_2024_45409.CVE202445409Exploit()
    accept = exploit_instance.accept(target)
    vulnerabilities = exploit_instance.check(target)

    assert accept is True
    assert len(vulnerabilities) > 0
    vulnerability = vulnerabilities[0]

    assert (
        vulnerability.entry.title == "GitLab SAML Authentication Bypass Vulnerability."
    )
    assert (
        vulnerability.technical_detail
        == "https://localhost:8080 is vulnerable to CVE-2024-45409, GitLab SAML Authentication Bypass Vulnerability."
    )
    assert vulnerability.risk_rating.name == "POTENTIALLY"


def testCVE202445409_whenNotVulnerable_reportNoFinding(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """Test exploit don't report finding."""
    target = definitions.Target("https", "localhost", 8080)
    requests_mock.get(
        target.url + "users/sign_in",
        status_code=200,
        text="<title>Sign in · GitLab</title>"
        '<link rel="preload" href="'
        '/assets/application-b52d3dd3b307bb936ad862671cae67163327698f3dc2c4f232173d621af2a87.css"'
        ' as="style" type="text/css">',
    )

    exploit_instance = cve_2024_45409.CVE202445409Exploit()
    accept = exploit_instance.accept(target)
    vulnerabilities = exploit_instance.check(target)

    assert accept is True
    assert len(vulnerabilities) == 0
