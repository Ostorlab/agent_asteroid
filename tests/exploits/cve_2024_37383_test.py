"""Unit tests for Agent Asteroid: CVE-2024-37383"""

import requests_mock as req_mock

from agent import definitions
from agent.exploits import cve_2024_37383


def testCVE202437383_whenVersion156_reportFinding(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """CVE-2024-37383 unit test: case when target is vulnerable (1.5.6)."""
    requests_mock.get(
        "http://localhost:80/",
        text="""{"rcversion":10506,"product":"Roundcube Webmail"}""",
        status_code=200,
    )
    exploit_instance = cve_2024_37383.CVE202437383Exploit()
    target = definitions.Target("http", "localhost", 80)

    accept = exploit_instance.accept(target)
    vulnerabilities = exploit_instance.check(target)

    assert accept is True
    assert len(vulnerabilities) > 0
    vulnerability = vulnerabilities[0]
    assert (
        vulnerability.entry.title
        == "XSS via SVG Animate Attributes in Roundcube Webmail"
    )
    assert vulnerability.technical_detail == (
        "http://localhost:80/ is vulnerable to CVE-2024-37383, "
        "XSS via SVG Animate Attributes in Roundcube Webmail"
    )
    assert vulnerability.vulnerability_location is not None
    assert vulnerability.dna is not None


def testCVE202437383_whenVersion166_reportFinding(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """CVE-2024-37383 unit test: case when target is vulnerable (1.6.6)."""
    requests_mock.get(
        "http://localhost:80/",
        text="""{"rcversion":10606,"product":"Roundcube Webmail"}""",
        status_code=200,
    )
    exploit_instance = cve_2024_37383.CVE202437383Exploit()
    target = definitions.Target("http", "localhost", 80)

    accept = exploit_instance.accept(target)
    vulnerabilities = exploit_instance.check(target)

    assert accept is True
    assert len(vulnerabilities) > 0
    vulnerability = vulnerabilities[0]
    assert (
        vulnerability.entry.title
        == "XSS via SVG Animate Attributes in Roundcube Webmail"
    )
    assert vulnerability.technical_detail == (
        "http://localhost:80/ is vulnerable to CVE-2024-37383, "
        "XSS via SVG Animate Attributes in Roundcube Webmail"
    )
    assert vulnerability.vulnerability_location is not None
    assert vulnerability.dna is not None


def testCVE202437383_whenSafe_reportNothing(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """CVE-2024-37383 unit test: case when target is safe."""
    requests_mock.get(
        "http://localhost:80/",
        text="""{"rcversion":10607,"product":"Roundcube Webmail"}""",
        status_code=200,
    )
    exploit_instance = cve_2024_37383.CVE202437383Exploit()
    target = definitions.Target("http", "localhost", 80)

    accept = exploit_instance.accept(target)
    vulnerabilities = exploit_instance.check(target)

    assert accept is True
    assert len(vulnerabilities) == 0
