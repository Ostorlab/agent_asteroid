"""Unit tests for Agent Asteroid: VHD PTZ Camera Command Injection"""

import requests_mock as req_mock
from requests import exceptions as requests_exceptions

from agent import definitions
from agent.exploits import cve_2024_8957


def testVHDPTZCommandInjection_whenVulnerable_reportFinding(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """Test case: when target is vulnerable to command injection."""
    requests_mock.get(
        "http://localhost:80/cgi-bin/param.cgi",
        text='devname="ptzoptics" devtype="VX630A" versioninfo="SOC v6.3.40 - ARM 6.3.51THI" serial_num="r1j04260027" device_model="F53.HI"',
        status_code=200,
    )
    requests_mock.post(
        "http://localhost:80/cgi-bin/param.cgi?post_network_other_conf",
        text='{"Response":{"Result":"Success"}}"',
        status_code=200,
    )

    exploit_instance = cve_2024_8957.VHDPTZCommandInjectionExploit()
    target = definitions.Target("http", "localhost", 80)
    accept = exploit_instance.accept(target)

    vulnerabilities = exploit_instance.check(target)

    assert accept is True
    assert len(vulnerabilities) > 0
    vulnerability = vulnerabilities[0]
    assert vulnerability.entry.title == "ValueHD PTZ Camera Command Injection"


def testVHDPTZCommandInjection_whenNotVulnerable_reportNothing(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """Test case: when target is not vulnerable to command injection."""
    requests_mock.post(
        "http://localhost:80/cgi-bin/param.cgi?post_network_other_conf",
        text="Couldn't connect to server\"",
        status_code=200,
    )

    exploit_instance = cve_2024_8957.VHDPTZCommandInjectionExploit()
    target = definitions.Target("http", "localhost", 80)

    vulnerabilities = exploit_instance.check(target)

    assert len(vulnerabilities) == 0


def testVHDPTZCommandInjection_requestException_handlingErrorLogged(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """Test case: handle RequestException in command injection detection."""
    requests_mock.post(
        "http://localhost:80/cgi-bin/param.cgi?post_network_other_conf",
        exc=requests_exceptions.RequestException("Simulated connection error"),
    )

    exploit_instance = cve_2024_8957.VHDPTZCommandInjectionExploit()
    target = definitions.Target("http", "localhost", 80)

    vulnerabilities = exploit_instance.check(target)

    assert len(vulnerabilities) == 0
