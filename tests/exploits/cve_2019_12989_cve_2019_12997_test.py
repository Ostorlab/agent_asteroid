"""Unit tests for Agent Asteroid: CVE-2019-12989 and CVE-2019-12991."""

import requests_mock as req_mock

from agent import definitions
from agent.exploits import cve_2019_12989


def testCVE201912989_whenVulnerable_reportFinding(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """Ensure that the exploit reports findings when the application is vulnerable."""
    exploit_instance = cve_2019_12989.CVE201912989Exploit()
    json_response = {
        "status": "fail",
        "message": "Invalid value specified for site_name or appliance_type",
    }
    requests_mock.post(
        "http://213.174.110.201:80/sdwan/nitro/v1/config/get_package_file?action=file_download",
        json=json_response,
        status_code=400,
    )
    target = definitions.Target("http", "213.174.110.201", 80)

    vulnerabilities = exploit_instance.check(target)

    vulnerability = vulnerabilities[0]
    assert (
        vulnerability.entry.title
        == "Security Vulnerabilities in Citrix CVE-2019-12989 and CVE-2019-12991"
    )
    assert (
        vulnerability.technical_detail
        == "http://213.174.110.201:80 is vulnerable to CVE-2019-12989 and CVE-2019-12991"
    )


def testCVE201912989_whenNotVulnerable_noFindingsReported(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """Ensure that there is no findings when the application is not vulnerable."""
    exploit_instance = cve_2019_12989.CVE201912989Exploit()
    requests_mock.post(
        "http://213.174.110.201:80/sdwan/nitro/v1/config/get_package_file?action=file_download",
        json={},
        status_code=400,
    )
    target = definitions.Target("http", "213.174.110.201", 80)

    vulnerabilities = exploit_instance.check(target)

    assert len(vulnerabilities) == 0


def testCVE201912989_whenJsonNotValide_noFindingsReported(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """Ensure that there is no findings when the application is not vulnerable."""
    exploit_instance = cve_2019_12989.CVE201912989Exploit()
    requests_mock.post(
        "http://213.174.110.201:80/sdwan/nitro/v1/config/get_package_file?action=file_download",
        text="{name: John', 'age': 30}",
        status_code=400,
    )
    target = definitions.Target("http", "213.174.110.201", 80)

    vulnerabilities = exploit_instance.check(target)

    assert len(vulnerabilities) == 0
