"""Unit tests for Agent Asteroid: CVE-2024-9634"""

import requests
import requests_mock

from agent import definitions
from agent.exploits import cve_2024_9634


def testCVE20249634_whenVersionVulnerable_reportsFinding() -> None:
    """CVE-2024-9634: Detects vulnerable version."""
    with requests_mock.Mocker() as mocker:
        mocker.get(
            "http://localhost:80/wp-content/plugins/give/readme.txt",
            text="=== GiveWP - Donation Plugin and Fundraising Platform ===\n\nStable tag: 3.16.3\n",
            status_code=200,
        )
        exploit = cve_2024_9634.CVE20249634Exploit()
        target = definitions.Target("http", "localhost", 80)

        assert exploit.accept(target)
        vulnerabilities = exploit.check(target)

        assert len(vulnerabilities) > 0
        assert vulnerabilities[0].entry.title == (
            "PHP Object Injection Vulnerability in GiveWP Plugin"
        )


def testCVE20249634_whenSafe_reportNothing() -> None:
    """CVE-2024-9634: Safe version results in no finding."""
    with requests_mock.Mocker() as mocker:
        mocker.get(
            "http://localhost:80/wp-content/plugins/give/readme.txt",
            text="=== GiveWP - Donation Plugin and Fundraising Platform ===\n\nStable tag: 3.16.4\n",
            status_code=200,
        )
        exploit = cve_2024_9634.CVE20249634Exploit()
        target = definitions.Target("http", "localhost", 80)

        assert exploit.accept(target)
        vulnerabilities = exploit.check(target)

        assert len(vulnerabilities) == 0


def testCVE20249634_whenRequestError_reportsNothing() -> None:
    """CVE-2024-9634: Handles request error gracefully."""
    with requests_mock.Mocker() as mocker:
        # Simulate a connection error
        mocker.get(
            "http://localhost:80/wp-content/plugins/give/readme.txt",
            exc=requests.exceptions.ConnectionError,
        )

        exploit_instance = cve_2024_9634.CVE20249634Exploit()
        target = definitions.Target("http", "localhost", 80)

        vulnerabilities = exploit_instance.check(target)

        assert len(vulnerabilities) == 0
