"""Unit tests for Agent Asteroid: Jetpack Exploit"""

import pytest
import requests_mock as req_mock

from agent import definitions
from agent.exploits import jetpack_version_detection


def testCVE20249487_whenVulnerable_reportFinding(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """Jetpack Exploit unit test: case when target is vulnerable."""
    requests_mock.get(
        "http://localhost:80/wp-content/plugins/jetpack/readme.txt",
        text="""
        === Jetpack - WP Security, Backup, Speed, & Growth ===
        Tags: Security, backup, malware, scan, performance
        Stable tag: 4.9.2
        Requires at least: 6.5
        """,
        status_code=200,
    )
    exploit_instance = jetpack_version_detection.JetpackExploit()
    target = definitions.Target("http", "localhost", 80)

    accept = exploit_instance.accept(target)
    vulnerabilities = exploit_instance.check(target)

    assert accept is True
    vulnerability = vulnerabilities[0]
    assert (
        vulnerability.entry.title
        == "UNAUTHORIZED FORM DATA EXPOSURE VULNERABILITY IN JETPACK'S CONTACT FORM FEATURE"
    )
    assert vulnerability.technical_detail == (
        "http://localhost:80/ is vulnerable to jetpack data exposure, "
        "UNAUTHORIZED FORM DATA EXPOSURE VULNERABILITY IN JETPACK'S CONTACT FORM FEATURE"
    )


def testCVE20249487_whenNotVulnerable_reportNothing(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """jetpack_version_detection unit test: case when target is vulnerable."""
    requests_mock.get(
        "http://localhost:80/wp-content/plugins/jetpack/readme.txt",
        text="""
        === Jetpack - WP Security, Backup, Speed, & Growth ===
        Tags: Security, backup, malware, scan, performance
        Stable tag: 13.9.1
        Requires at least: 6.5
        """,
        status_code=200,
    )
    exploit_instance = jetpack_version_detection.JetpackExploit()
    target = definitions.Target("http", "localhost", 80)

    accept = exploit_instance.accept(target)
    vulnerabilities = exploit_instance.check(target)

    assert accept is True
    assert len(vulnerabilities) == 0


def testCVE20249487_whenNetworkErrorOccurs_reportNothing(
    caplog: pytest.LogCaptureFixture,
) -> None:
    """Jetpack Exploit unit test: case when network error occurs."""

    exploit_instance = jetpack_version_detection.JetpackExploit()
    target = definitions.Target("http", "nonexesit", 80)

    vulnerabilities = exploit_instance.check(target)
    assert len(vulnerabilities) == 0
    assert "Network error occurred" in caplog.text
