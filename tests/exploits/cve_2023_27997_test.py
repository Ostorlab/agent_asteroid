"""Unit tests for Agent Asteroid exploits"""

import datetime

import requests
from pytest_mock import plugin

from agent import definitions
from agent.exploits import cve_2023_27997

seed: int = 0


def testCVE_2023_27997_whenVulnerable_reportFinding(
    mocker: plugin.MockerFixture,
) -> None:
    exploit_instance = cve_2023_27997.CVE202327997Exploit()

    def side_effect(*args, **kwargs):  # type: ignore[no-untyped-def]
        global seed
        mock_response = mocker.Mock(spec=requests.Response)
        if seed % 2 == 0:
            elapsed = datetime.timedelta(microseconds=2500)
        else:
            elapsed = datetime.timedelta(microseconds=1)

        mock_response.elapsed = elapsed
        seed += 1
        return mock_response

    mocker.patch("agent.definitions.HttpSession.post", side_effect=side_effect)

    target = definitions.Target(scheme="https", host="91.135.170.42", port=8443)
    vulnerabilities = exploit_instance.check(target)
    vulnerability = vulnerabilities[0]

    assert (
        vulnerability.entry.title
        == "A heap-based buffer overflow vulnerability in FortiOS"
    )
    assert (
        vulnerability.technical_detail
        == "https://91.135.170.42:8443/ is vulnerable to CVE-2023-27997, "
        "A heap-based buffer overflow vulnerability in FortiOS."
    )
    assert vulnerability.entry.risk_rating == "CRITICAL"
