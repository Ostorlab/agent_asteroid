"""Unit tests for Agent Asteroid: CVE-2024-2879"""

import requests_mock as req_mock

from agent import definitions
from agent.exploits import cve_2024_2879


def testCVE20242879_whenVulnerable_reportFinding(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """CVE-2024-2879 unit test: case when target is vulnerable."""
    requests_mock.get(
        "http://localhost:80/",
        text="""<link rel='stylesheet' id='layerslider-css' 
        href='http://localhost/wp-content/plugins/LayerSlider/assets/static/layerslider/css/layerslider.css?ver=7.10.0' 
        type='text/css' media='all' />""",
        status_code=200,
    )
    exploit_instance = cve_2024_2879.CVE20242879Exploit()
    target = definitions.Target("http", "localhost", 80)

    accept = exploit_instance.accept(target)
    vulnerabilities = exploit_instance.check(target)

    assert accept is True
    vulnerability = vulnerabilities[0]
    assert (
        vulnerability.entry.title
        == "LayerSlider 7.9.11 - 7.10.0 - Unauthenticated SQL Injection"
    )
    assert vulnerability.technical_detail == (
        "http://localhost:80/ is vulnerable to CVE-2024-2879, LayerSlider "
        "7.9.11 - 7.10.0 - Unauthenticated SQL Injection"
    )


def testCVE20242879_whenSafe_reportNothing(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """CVE-2024-2879 unit test: case when target is safe."""
    exploit_instance = cve_2024_2879.CVE20242879Exploit()
    requests_mock.get(
        "http://localhost:80/",
        text="""<link rel='stylesheet' id='layerslider-css' 
            href='http://localhost/wp-content/plugins/LayerSlider/assets/static/layerslider/css/layerslider.css?ver=5.5.1' 
            type='text/css' media='all' />""",
        status_code=200,
    )
    target = definitions.Target("http", "localhost", 80)

    accept = exploit_instance.accept(target)
    vulnerabilities = exploit_instance.check(target)

    assert accept is True
    assert len(vulnerabilities) == 0
