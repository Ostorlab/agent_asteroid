"""Unit tests for Agent Asteroid: CVE-2018-15133"""

import re

import requests_mock as req_mock

from agent import definitions
from agent.exploits import cve_2018_15133


def testCVE201815133_whenVulnerable_reportFinding(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """CVE-2018-15133 unit test: case when target is vulnerable."""
    exploit_instance = cve_2018_15133.CVE201815133Exploit()
    requests_mock.get(
        re.compile("http://localhost:8089"),
        text='{"report":{"notifier":"Laravel Client","language":"PHP","framework_version":"5.6.28"}',
        status_code=405,
    )
    target = definitions.Target("http", "localhost", 8089)

    exploit_instance.accept(target)
    vulnerabilities = exploit_instance.check(target)

    vulnerability = vulnerabilities[0]
    assert vulnerability.entry.title == (
        "PHP Laravel Framework 5.5.40 / 5.6.x < 5.6.30 - token Unserialize Remote "
        "Command Execution"
    )
    assert vulnerability.technical_detail == (
        "http://localhost:8089/ is vulnerable to CVE-2018-15133, PHP Laravel "
        "Framework 5.5.40 / 5.6.x < 5.6.30 - token Unserialize Remote Command "
        "Execution"
    )


def testCVE201815133_whenSafe_reportNothing(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """CVE-2018-15133 unit test: case when target is safe."""
    exploit_instance = cve_2018_15133.CVE201815133Exploit()
    requests_mock.get(
        re.compile("http://localhost"),
        text='{"report":{"notifier":"Laravel Client","language":"PHP","framework_version":"5.6.30"}',
        status_code=405,
    )
    target = definitions.Target("http", "localhost", 8089)

    exploit_instance.accept(target)
    vulnerabilities = exploit_instance.check(target)

    assert len(vulnerabilities) == 0
