"""Unit tests for Agent Asteroid: CVE_2024_9487"""

import requests_mock as req_mock

from agent import definitions
from agent.exploits import cve_2024_9487


def testCVE20249487_whenVulnerable_reportFinding(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """CVE_2024_9487 unit test: case when target is vulnerable."""
    requests_mock.get(
        "http://localhost:80/",
        text="""
        <div class="d-flex flex-justify-center py-2">
        <span class="f6 color-fg-muted">GitHub Enterprise Server 3.14.1</span>
        </div>
        """,
        status_code=200,
    )
    exploit_instance = cve_2024_9487.CVE20249487Exploit()
    target = definitions.Target("http", "localhost", 80)

    accept = exploit_instance.accept(target)
    vulnerabilities = exploit_instance.check(target)

    assert accept is True
    vulnerability = vulnerabilities[0]
    assert vulnerability.entry.title == "GITHUB ENTERPRISE SERVER AUTHENTICATION BYPASS"
    assert vulnerability.technical_detail == (
        "http://localhost:80 is vulnerable to CVE-2024-9487, "
        "GITHUB ENTERPRISE SERVER AUTHENTICATION BYPASS"
    )


def testCVE20249487_whenNotVulnerable_reportNothing(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """CVE_2024_9487 unit test: case when target is not vulnerable."""
    requests_mock.get(
        "http://localhost:80/",
        text="""
         <div class="d-flex flex-justify-center py-2">
        <span class="f6 color-fg-muted">GitHub Enterprise Server 3.14.2</span>
        </div>
        """,
        status_code=200,
    )
    exploit_instance = cve_2024_9487.CVE20249487Exploit()
    target = definitions.Target("http", "localhost", 80)

    accept = exploit_instance.accept(target)
    vulnerabilities = exploit_instance.check(target)

    assert accept is True
    assert len(vulnerabilities) == 0


def testCVE20249487_whenVersionVeryOld_reportFinding(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """CVE_2024_9487 unit test: case when matched version is older that 3.11."""
    requests_mock.get(
        "http://localhost:80/",
        text="""
        <div class="d-flex flex-justify-center py-2">
        <span class="f6 color-fg-muted">GitHub Enterprise Server 3.9.1</span>
        </div>
        """,
        status_code=200,
    )
    exploit_instance = cve_2024_9487.CVE20249487Exploit()
    target = definitions.Target("http", "localhost", 80)

    accept = exploit_instance.accept(target)
    vulnerabilities = exploit_instance.check(target)

    assert accept is True
    vulnerability = vulnerabilities[0]
    assert vulnerability.entry.title == "GITHUB ENTERPRISE SERVER AUTHENTICATION BYPASS"
    assert vulnerability.technical_detail == (
        "http://localhost:80 is vulnerable to CVE-2024-9487, "
        "GITHUB ENTERPRISE SERVER AUTHENTICATION BYPASS"
    )
