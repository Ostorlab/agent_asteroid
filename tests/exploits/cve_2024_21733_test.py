"""Unit tests for Agent Asteroid: CVE-2024-21733"""
import re

import requests_mock as req_mock

from agent import definitions
from agent.exploits import cve_2024_21733


def testCVE202421733_whenVulnerable_reportFinding(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """CVE-2024-21733 unit test: case when target is vulnerable."""
    exploit_instance = cve_2024_21733.CVE202421733Exploit()
    requests_mock.get(
        re.compile("http://localhost:8085"),
        text='<title>HTTP Status 404 – Not Found</title><h3>Apache Tomcat/9.0.43</h3>',
        status_code=404,
    )
    target = definitions.Target("http", "localhost", 8085)

    exploit_instance.accept(target)
    vulnerabilities = exploit_instance.check(target)

    vulnerability = vulnerabilities[0]
    assert (
        vulnerability.entry.title
        == "Apache Tomcat HTTP Request Smuggling (Client- Side Desync)"
    )
    assert vulnerability.technical_detail == (
        "http://localhost:8085 is vulnerable to CVE-2024-21733, Apache Tomcat HTTP "
        "Request Smuggling (Client- Side Desync)"
    )


def testCVE202421733_whenSafe_reportNothing(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """CVE-2024-21733 unit test: case when target is safe."""
    exploit_instance = cve_2024_21733.CVE202421733Exploit()
    requests_mock.get(
        re.compile("http://localhost"),
        text='<title>HTTP Status 404 – Not Found</title><h3>Apache Tomcat/9.0.73</h3>',
        status_code=405,
    )
    target = definitions.Target("http", "localhost", 8089)

    exploit_instance.accept(target)
    vulnerabilities = exploit_instance.check(target)

    assert len(vulnerabilities) == 0
