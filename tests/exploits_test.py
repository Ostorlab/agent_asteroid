"""Unit tests for Agent Asteriod exploits"""
import datetime

import requests
from pytest_mock import plugin
import requests_mock as req_mock

from agent.exploits import cve_2023_27997
from agent.exploits import cve_2019_12989__cve_2019_12991


seed: int = 0


def testCVE_2023_27997_whenVulnerable_reportFinding(
    mocker: plugin.MockerFixture,
) -> None:
    exploit_instance = cve_2023_27997.Exploit("https://91.135.170.42:8443")

    def side_effect(*args, **kwargs):  # type: ignore[no-untyped-def]
        global seed
        mock_response = mocker.Mock(spec=requests.Response)
        if seed % 2 == 0:
            elapsed = datetime.timedelta(microseconds=2500)
        else:
            elapsed = datetime.timedelta(microseconds=1)

        mock_response.elapsed = elapsed
        seed += 1
        return mock_response

    mocker.patch("requests.sessions.Session.post", side_effect=side_effect)

    vulnerabilities = exploit_instance.check()
    vulnerability = vulnerabilities[0]

    assert (
        vulnerability.entry.title
        == "A heap-based buffer overflow vulnerability in FortiOS"
    )
    assert (
        vulnerability.technical_detail
        == "https://91.135.170.42:8443 is vulnerable to CVE-2023-27997, "
        "A heap-based buffer overflow vulnerability in FortiOS"
    )


def test_CVE_2019_12989_and_CVE_2019_12991_whenVulnerable_reportFinding(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """Ensure that the exploit reports findings when the application is vulnerable."""
    exploit_instance = cve_2019_12989__cve_2019_12991.Exploit("http://44.194.115.246")
    json_response = {
        "status": "fail",
        "message": "Invalid value specified for site_name or appliance_type",
    }

    requests_mock.post(
        "http://44.194.115.246/sdwan/nitro/v1/config/get_package_file?action=file_download",
        json=json_response,
        status_code=400,
    )

    vulnerabilities = exploit_instance.check()
    vulnerability = vulnerabilities[0]

    assert (
        vulnerability.entry.title
        == "Security Vulnerabilities in Citrix CVE-2019-12989 and CVE-2019-12991"
    )
    assert (
        vulnerability.technical_detail
        == "http://44.194.115.246 is vulnerable to CVE-2019-12989 and CVE-2019-12991"
    )
