"""Unit tests for Agent Asteriod exploits"""
import datetime
import re

import requests
import requests_mock as req_mock
from pytest_mock import plugin

from agent import definitions
from agent.exploits import cve_2021_22941
from agent.exploits import cve_2023_27997
from agent.exploits import cve_2018_13382

seed: int = 0


def testCVE_2023_27997_whenVulnerable_reportFinding(
    mocker: plugin.MockerFixture,
) -> None:
    exploit_instance = cve_2023_27997.CVE202327997Exploit()

    def side_effect(*args, **kwargs):  # type: ignore[no-untyped-def]
        global seed
        mock_response = mocker.Mock(spec=requests.Response)
        if seed % 2 == 0:
            elapsed = datetime.timedelta(microseconds=2500)
        else:
            elapsed = datetime.timedelta(microseconds=1)

        mock_response.elapsed = elapsed
        seed += 1
        return mock_response

    mocker.patch("requests.sessions.Session.post", side_effect=side_effect)

    target = definitions.Target(scheme="https", host="91.135.170.42", port=8443)
    vulnerabilities = exploit_instance.check(target)
    vulnerability = vulnerabilities[0]

    assert (
        vulnerability.entry.title
        == "A heap-based buffer overflow vulnerability in FortiOS"
    )
    assert (
        vulnerability.technical_detail
        == "https://91.135.170.42:8443 is vulnerable to CVE-2023-27997, "
        "A heap-based buffer overflow vulnerability in FortiOS"
    )
    assert vulnerability.entry.risk_rating == "HIGH"


def testCVE_2021_22941_whenVulnerable_reportFinding(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """Unit test for CVE-2021-22941, case when target is vulnerable"""
    target = definitions.Target(scheme="https", host="75.162.65.52", port=443)
    exploit_instance = cve_2021_22941.CVE20222941Exploit()
    requests_mock.post(re.compile("https://75.162.65.52"))
    requests_mock.get(
        re.compile("https://75.162.65.52"),
        content=b'<!DOCTYPE html><html><head><meta charset="utf-8" />'
        b'<meta name="viewport" content="width=device-width" />'
        b"<title></title>"
        b'<link href="/configservice/Content/css?v=WMr-pvK-ldSbNXHT-cT0d9QF2pqi7sqz_4MtKl04wlw1" rel="stylesheet"/>'
        b'<script src="/configservice/bundles/modernizr?v="></script></head>'
        b"<body>__VULNERABLE__/../../ConfigService\\Views\\Shared\\Error.cshtml,"
        b"4190,4190,1,638351359841918992,638351359844106518"
        b'<script src="/configservice/bundles/jquery?v=Btq6NiodC7qP1zsuC2xUYWo89HSxJy2RWUt0n_7RLeM1"></script>'
        b"</body></html>",
    )

    vulnerabilities = exploit_instance.check(target)
    vulnerability = vulnerabilities[0]

    assert (
        vulnerability.entry.title
        == "Improper Access Control in Citrix ShareFile storage zones controller"
    )
    assert (
        vulnerability.technical_detail
        == "https://75.162.65.52 is vulnerable to CVE-2021-22941, Improper Access Control "
        "in Citrix ShareFile storage zones controller"
    )


def test_CVE_2018_13382_whenVulnerable_reportFinding(
    requests_mock: req_mock.mocker.Mocker,
    target_vulnerable_to_cve_2018_13382: definitions.Target,
) -> None:
    """Ensure that the exploit reports findings when the application is vulnerable."""
    exploit_instance = cve_2018_13382.CVE201813382Exploit()
    url = "https://109.239.246.106:10443/remote/login?lang=en"
    requests_mock.post(
        url,
        text="redir=/remote/hostcheck_install",
        status_code=200,
    )

    vulnerabilities = exploit_instance.check(target_vulnerable_to_cve_2018_13382)
    vulnerability = vulnerabilities[0]

    assert (
        vulnerability.entry.title
        == "An Improper Authorization vulnerability in Fortinet FortiOS: CVE-2018-13382"
    )
    assert (
        vulnerability.technical_detail
        == "109.239.246.106 is vulnerable to CVE-2018-13382"
    )


def test_CVE_2018_13382_whenNotVulnerable_reportFinding(
    requests_mock: req_mock.mocker.Mocker,
    target_not_vulnerable_to_cve_2018_13382: definitions.Target,
) -> None:
    """Ensure that there is not findings when the application is not vulnerable."""
    exploit_instance = cve_2018_13382.CVE201813382Exploit()
    url = "https://139.255.255.218:10443/remote/login?lang=en"
    requests_mock.post(
        url,
        text="",
        status_code=200,
    )

    vulnerabilities = exploit_instance.check(target_not_vulnerable_to_cve_2018_13382)

    assert len(vulnerabilities) == 0
