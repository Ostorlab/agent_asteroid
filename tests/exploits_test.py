"""Unit tests for Agent Asteriod exploits"""
import datetime
import re

import requests
import requests_mock as req_mock
from pytest_mock import plugin

from agent import definitions
from agent.exploits import cve_2021_22941
from agent.exploits import cve_2023_27997
from agent.exploits import cve_2019_7193

seed: int = 0


def testCVE202327997_whenVulnerable_reportFinding(
    mocker: plugin.MockerFixture,
) -> None:
    exploit_instance = cve_2023_27997.CVE202327997Exploit()

    def side_effect(*args, **kwargs):  # type: ignore[no-untyped-def]
        global seed
        mock_response = mocker.Mock(spec=requests.Response)
        if seed % 2 == 0:
            elapsed = datetime.timedelta(microseconds=2500)
        else:
            elapsed = datetime.timedelta(microseconds=1)

        mock_response.elapsed = elapsed
        seed += 1
        return mock_response

    mocker.patch("requests.sessions.Session.post", side_effect=side_effect)

    target = definitions.Target(scheme="https", host="91.135.170.42", port=8443)
    vulnerabilities = exploit_instance.check(target)
    vulnerability = vulnerabilities[0]

    assert (
        vulnerability.entry.title
        == "A heap-based buffer overflow vulnerability in FortiOS"
    )
    assert (
        vulnerability.technical_detail
        == "https://91.135.170.42:8443 is vulnerable to CVE-2023-27997, "
        "A heap-based buffer overflow vulnerability in FortiOS"
    )
    assert vulnerability.entry.risk_rating == "HIGH"


def testCVE202122941_whenVulnerable_reportFinding(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """Unit test for CVE-2021-22941, case when target is vulnerable"""
    target = definitions.Target(scheme="https", host="75.162.65.52", port=443)
    exploit_instance = cve_2021_22941.CVE20222941Exploit()
    requests_mock.post(re.compile("https://75.162.65.52"))
    requests_mock.get(
        re.compile("https://75.162.65.52"),
        content=b'<!DOCTYPE html><html><head><meta charset="utf-8" />'
        b'<meta name="viewport" content="width=device-width" />'
        b"<title></title>"
        b'<link href="/configservice/Content/css?v=WMr-pvK-ldSbNXHT-cT0d9QF2pqi7sqz_4MtKl04wlw1" rel="stylesheet"/>'
        b'<script src="/configservice/bundles/modernizr?v="></script></head>'
        b"<body>__VULNERABLE__/../../ConfigService\\Views\\Shared\\Error.cshtml,"
        b"4190,4190,1,638351359841918992,638351359844106518"
        b'<script src="/configservice/bundles/jquery?v=Btq6NiodC7qP1zsuC2xUYWo89HSxJy2RWUt0n_7RLeM1"></script>'
        b"</body></html>",
    )

    vulnerabilities = exploit_instance.check(target)
    vulnerability = vulnerabilities[0]

    assert (
        vulnerability.entry.title
        == "Improper Access Control in Citrix ShareFile storage zones controller"
    )
    assert (
        vulnerability.technical_detail
        == "https://75.162.65.52 is vulnerable to CVE-2021-22941, Improper Access Control "
        "in Citrix ShareFile storage zones controller"
    )


def testCVE20197193_whenVulnerable_reportFinding(
    requests_mock: req_mock.mocker.Mocker,
) -> None:
    """Unit test for CVE-2019-7193, case when target is vulnerable"""
    target = definitions.Target(scheme="https", host="127.0.0.1", port=443)
    exploit_instance = cve_2019_7193.CVE20197193Exploit()
    requests_mock.post(
        "https://127.0.0.1:443/photo/p/api/album.php",
        content=b"<output>xyz</output>",
    )
    requests_mock.get(
        "https://127.0.0.1:443/photo/slideshow.php?album=xyz",
        content=b"encodeURIComponent('abc')",
    )
    requests_mock.post(
        "https://127.0.0.1:443/photo/p/api/video.php",
        content=b"admin:x:0:0:administrator,,,:/share/homes/admin:/bin/sh"
        b"guest:x:65534:65534:guest:/share/homes/guest:/bin/sh"
        b"httpdusr:x:99:0:Apache httpd user:/tmp:/bin/sh"
        b"[sshd]:x:110:65534:SSHD Privilege Separation:/var/empty:/bin/sh",
    )

    vulnerabilities = exploit_instance.check(target)
    vulnerability = vulnerabilities[0]

    assert (
        vulnerability.entry.title
        == "This improper input validation vulnerability in QNAP QTS"
    )
    assert (
        vulnerability.technical_detail
        == "https://127.0.0.1:443 is vulnerable to CVE-2019-7193, This improper input validation vulnerability in QNAP QTS"
    )
