"""Agent Asteroid implementation for CVE-2024-9634"""

import re

import requests
from packaging import version
from urllib import parse as urlparse

from agent import definitions
from agent import exploits_registry
from agent.exploits import webexploit

VULNERABILITY_TITLE = "PHP Object Injection Vulnerability in GiveWP Plugin"
VULNERABILITY_REFERENCE = "CVE-2024-9634"
VULNERABILITY_DESCRIPTION = (
    "The GiveWP â€“ Donation Plugin and Fundraising Platform plugin for WordPress "
    "is vulnerable to PHP Object Injection in versions up to 3.16.3. "
    "This vulnerability allows unauthenticated attackers to inject PHP objects, "
    "potentially leading to remote code execution through a POP chain."
)
RISK_RATING = "CRITICAL"
MAX_SAFE_VERSION = version.parse("3.16.3")


def _is_vulnerable_version(version_str: str) -> bool:
    """Check if the given version is vulnerable."""
    return version.parse(version_str.strip()) <= MAX_SAFE_VERSION


def _send_request(
    target: definitions.Target, request: definitions.Request
) -> requests.Response | None:
    """Helper to send HTTP requests using the provided session setup."""
    session = requests.Session()
    session.max_redirects = webexploit.MAX_REDIRECTS
    session.verify = False

    try:
        target_endpoint = urlparse.urljoin(target.origin, request.path)
        prepared_request = requests.Request(
            method=request.method, url=target_endpoint, data=request.data
        ).prepare()
        if request.headers is not None:
            request.headers.update(prepared_request.headers)
            prepared_request.headers = request.headers  # type: ignore
        return session.send(prepared_request, timeout=webexploit.DEFAULT_TIMEOUT)
    except requests.exceptions.RequestException:
        return None


@exploits_registry.register
class CVE20249634Exploit(webexploit.WebExploit):
    accept_request = definitions.Request(
        method="GET", path="/wp-content/plugins/give/readme.txt"
    )
    check_request = definitions.Request(
        method="GET", path="/wp-content/plugins/give/readme.txt"
    )
    accept_pattern = [re.compile(r"GiveWP - Donation Plugin and Fundraising Platform")]
    version_pattern = re.compile(r"Stable tag: (\d+\.\d+\.\d+)")

    metadata = definitions.VulnerabilityMetadata(
        title=VULNERABILITY_TITLE,
        description=VULNERABILITY_DESCRIPTION,
        reference=VULNERABILITY_REFERENCE,
        risk_rating=RISK_RATING,
    )

    def check(self, target: definitions.Target) -> list[definitions.Vulnerability]:
        """Check if the target is vulnerable to CVE-2024-9634."""
        response = _send_request(target, self.check_request)
        if response is None or response.status_code != 200:
            return []

        match = self.version_pattern.search(response.text)
        if match is not None and _is_vulnerable_version(match.group(1)) is True:
            return [self._create_vulnerability(target)]

        return []
