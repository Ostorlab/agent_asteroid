"""Agent Asteroid implementation for CVE-2024-47374"""

import re

from agent import definitions
from agent import exploits_registry
from agent.exploits import webexploit

# Vulnerable versions: all versions up to and including 6.5.0.2
VULNERABLE_VERSIONS = [
    r"(?P<major_0_to_5>[0-5])\.(?P<minor>[0-9]+)(\.(?P<patch>[0-9]+))?",  # Covers all versions from 0.0.0 to 5.x.x
    r"(?P<major_6_0_to_4>6)\.(?P<minor_0_to_4>[0-4])(\.(?P<patch>[0-9]+))?",  # Covers all 6.0.x to 6.4.x
    r"(?P<major_6_5>6)\.5\.0(\.(?P<patch_0_to_2>[0-2]))$",  # Covers only 6.5.0, 6.5.0.1, and 6.5.0.2, and nothing else
]
VULNERABILITY_TITLE = (
    "Stored Cross-Site Scripting (XSS) Vulnerability in LiteSpeed Cache for WordPress"
)
VULNERABILITY_REFERENCE = "CVE-2024-47374"
VULNERABILITY_DESCRIPTION = (
    "LiteSpeed Cache plugin for WordPress is vulnerable to a stored cross-site "
    "scripting (XSS) vulnerability in versions up to and including 6.5.0.2. This flaw "
    "could allow unauthenticated users to execute arbitrary JavaScript code under "
    "certain conditions."
)
RISK_RATING = "HIGH"


@exploits_registry.register
class CVE202447374Exploit(webexploit.WebExploit):
    accept_request = definitions.Request(
        method="GET", path="/wp-content/plugins/litespeed-cache/readme.txt"
    )
    check_request = definitions.Request(
        method="GET", path="/wp-content/plugins/litespeed-cache/readme.txt"
    )
    accept_pattern = [re.compile("LiteSpeed Cache")]
    match_pattern = [
        re.compile(f"Stable tag: {version}") for version in VULNERABLE_VERSIONS
    ]

    metadata = definitions.VulnerabilityMetadata(
        title=VULNERABILITY_TITLE,
        description=VULNERABILITY_DESCRIPTION,
        reference=VULNERABILITY_REFERENCE,
        risk_rating=RISK_RATING,
    )
