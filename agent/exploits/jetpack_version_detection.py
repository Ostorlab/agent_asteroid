"""Agent Asteroid implementation for jetpack version detection"""

import re
import datetime
from urllib import parse as urlparse

import requests
from packaging import version
from requests import exceptions as requests_exceptions

from agent import definitions
from agent import exploits_registry
from agent.exploits import webexploit

MAX_REDIRECTS = 2
DEFAULT_TIMEOUT = datetime.timedelta(seconds=90)
VULNERABILITY_TITLE = "GITHUB ENTERPRISE SERVER AUTHENTICATION BYPASS"
VULNERABILITY_REFERENCE = "CVE-2024-9487"
VULNERABILITY_DESCRIPTION = """A cryptographic signature verification flaw in GitHub Enterprise Server allowed bypassing SAML SSO authentication,
leading to unauthorized user access. Exploitation required encrypted assertions, direct network access, and a signed SAML response or metadata.
It affected versions before 3.15 and was fixed in 3.11.16, 3.12.10, 3.13.5, and 3.14.2. The vulnerability was reported through GitHub's Bug Bounty program."""
RISK_RATING = "CRITICAL"
FIXED_VERSIONS = {
    "13.9": "13.9.1",
    "13.8": "13.8.2",
    "13.7": "13.7.1",
    "13.6": "13.6.1",
    "13.5": "13.5.1",
    "13.4": "13.4.4",
    "13.3": "13.3.2",
    "13.2": "13.2.3",
    "13.1": "13.1.4",
    "13.0": "13.0.1",
    "12.9": "12.9.4",
    "12.8": "12.8.2",
    "12.7": "12.7.2",
    "12.6": "12.6.3",
    "12.5": "12.5.1",
    "12.4": "12.4.1",
    "12.3": "12.3.1",
    "12.2": "12.2.2",
    "12.1": "12.1.2",
    "12.0": "12.0.2",
    "11.9": "11.9.3",
    "11.8": "11.8.6",
    "11.7": "11.7.3",
    "11.6": "11.6.2",
    "11.5": "11.5.3",
    "11.4": "11.4.2",
    "11.3": "11.3.4",
    "11.2": "11.2.2",
    "11.1": "11.1.4",
    "11.0": "11.0.2",
    "10.9": "10.9.3",
    "10.8": "10.8.2",
    "10.7": "10.7.2",
    "10.6": "10.6.2",
    "10.5": "10.5.3",
    "10.4": "10.4.2",
    "10.3": "10.3.2",
    "10.2": "10.2.3",
    "10.1": "10.1.2",
    "10.0": "10.0.2",
    "9.9": "9.9.3",
    "9.8": "9.8.3",
    "9.7": "9.7.3",
    "9.6": "9.6.4",
    "9.5": "9.5.5",
    "9.4": "9.4.4",
    "9.3": "9.3.5",
    "9.2": "9.2.4",
    "9.1": "9.1.3",
    "9.0": "9.0.5",
    "8.9": "8.9.4",
    "8.8": "8.8.5",
    "8.7": "8.7.4",
    "8.6": "8.6.4",
    "8.5": "8.5.3",
    "8.4": "8.4.5",
    "8.3": "8.3.3",
    "8.2": "8.2.6",
    "8.1": "8.1.4",
    "8.0": "8.0.3",
    "7.9": "7.9.4",
    "7.8": "7.8.4",
    "7.7": "7.7.6",
    "7.6": "7.6.4",
    "7.5": "7.5.7",
    "7.4": "7.4.5",
    "7.3": "7.3.5",
    "7.2": "7.2.5",
    "7.1": "7.1.5",
    "7.0": "7.0.5",
    "6.9": "6.9.4",
    "6.8": "6.8.5",
    "6.7": "6.7.4",
    "6.6": "6.6.5",
    "6.5": "6.5.4",
    "6.4": "6.4.6",
    "6.3": "6.3.7",
    "6.2": "6.2.5",
    "6.1": "6.1.5",
    "6.0": "6.0.4",
    "5.9": "5.9.4",
    "5.8": "5.8.4",
    "5.7": "5.7.5",
    "5.6": "5.6.5",
    "5.5": "5.5.5",
    "5.4": "5.4.4",
    "5.3": "5.3.4",
    "5.2": "5.2.5",
    "5.1": "5.1.4",
    "5.0": "5.0.3",
    "4.9": "4.9.3",
    "4.8": "4.8.5",
    "4.7": "4.7.4",
    "4.6": "4.6.3",
    "4.5": "4.5.3",
    "4.4": "4.4.5",
    "4.3": "4.3.5",
    "4.2": "4.2.5",
    "4.1": "4.1.4",
    "4.0": "4.0.7",
    "3.9": "3.9.10",
}


@exploits_registry.register
class JetpackExploit(webexploit.WebExploit):
    accept_request = definitions.Request(
        method="GET", path="/wp-content/plugins/jetpack/readme.txt"
    )
    check_request = definitions.Request(
        method="GET", path="/wp-content/plugins/jetpack/readme.txt"
    )
    accept_pattern = re.compile(
        "=== Jetpack - WP Security, Backup, Speed, & Growth ==="
    )
    version_pattern = re.compile("GitHub\sEnterprise\sServer\s(\d+\.\d+\.\d+)")

    metadata = definitions.VulnerabilityMetadata(
        title=VULNERABILITY_TITLE,
        description=VULNERABILITY_DESCRIPTION,
        reference=VULNERABILITY_REFERENCE,
        risk_rating=RISK_RATING,
    )

    def check(self, target: definitions.Target) -> list[definitions.Vulnerability]:
        """Rule to detect specific vulnerability on a specific target.

        Args:
            target: Target to scan

        Returns:
            List of identified vulnerabilities.
        """
        session = requests.Session()
        session.max_redirects = MAX_REDIRECTS
        session.verify = False

        vulnerabilities: list[definitions.Vulnerability] = []

        target_endpoint = urlparse.urljoin(target.origin, self.check_request.path)

        try:
            req = requests.Request(
                method=self.check_request.method,
                url=target_endpoint,
                data=self.check_request.data,
            ).prepare()
            resp = session.send(req, timeout=DEFAULT_TIMEOUT)
        except requests_exceptions.RequestException:
            return vulnerabilities

        if (matched := self.version_pattern.findall(resp.text)) != []:
            for extracted_version in matched:
                if isinstance(extracted_version, tuple):
                    extracted_version = extracted_version[0]
                version_prefix = ".".join(extracted_version.split(".")[:2])
                if version.parse(extracted_version) < version.parse(
                    FIXED_VERSIONS[version_prefix]
                ):
                    vulnerability = self._create_vulnerability(target)
                    vulnerabilities.append(vulnerability)
        return vulnerabilities
